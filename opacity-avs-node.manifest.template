# Rust manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ self_exe }}"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"
loader.insecure__use_cmdline_argv = true

# See https://gramine.readthedocs.io/en/stable/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

# For easier debugging â€” not strictly required to run this workload
loader.env.RUST_BACKTRACE = "full"
loader.env.RUST_LOG = "DEBUG"
loader.env.yamux = "INFO"




fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },

  # For providing input through trusted or host-provided input files
  { path = "/opacity-avs-node/config", uri = "file:/opacity-avs-node/config" },
  { path = "/opacity-avs-node/fixture", uri = "file:/opacity-avs-node/fixture" }
]

sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# Enabling remote attestation
#! Figure out remoate attestation
#vsgx.remote_attestation = "{{ ra_type }}"
# sgx.ra_client_spid = "{{ ra_client_spid }}"
# sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}

sys.enable_extra_runtime_domain_names_conf = true
sys.insecure__allow_eventfd = true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ self_exe }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/opacity-avs-node/config/config.yaml",
  "file:/opacity-avs-node/fixture/notary/notary.key",
  "file:/opacity-avs-node/fixture/notary/notary.pub",
  "file:/opacity-avs-node/fixture/tls/notary.crt",
  "file:/opacity-avs-node/fixture/tls/notary.csr",
  "file:/opacity-avs-node/fixture/tls/notary.ext",
  "file:/opacity-avs-node/fixture/tls/notary.csr",
  "file:/opacity-avs-node/fixture/tls/notary.key",
  "file:/opacity-avs-node/fixture/tls/rootCA.crt",
  "file:/opacity-avs-node/fixture/tls/rootCA.key",
  "file:/opacity-avs-node/fixture/tls/rootCA.pem",
  "file:/opacity-avs-node/fixture/tls/rootCA.srl",
]

#sgx.allowed_files = [
#  "file:config/config.yaml",
#  "file:fixture/notary/notary.key",
#  "file:fixture/notary/notary.pub",
#  "file:fixture/tls/notary.crt",
#  "file:fixture/tls/notary.csr",
#  "file:fixture/tls/notary.ext",
#  "file:fixture/tls/notary.csr",
#  "file:fixture/tls/notary.key",
#  "file:fixture/tls/rootCA.crt",
#  "file:fixture/tls/rootCA.key",
#  "file:fixture/tls/rootCA.pem",
#  "file:fixture/tls/rootCA.srl",
#]

sgx.max_threads = 6
sgx.enclave_size = "512M"