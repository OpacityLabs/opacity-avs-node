// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractOpacityServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractOpacityServiceManagerMetaData contains all meta data concerning the ContractOpacityServiceManager contract.
var ContractOpacityServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"__avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"__registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"__stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"_initialPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_initialOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101606040523480156200001257600080fd5b50604051620044c4380380620044c48339810160408190526200003591620002da565b6001600160a01b0380841660c052808316608052811660a052818381836200005c620001ff565b5050506001600160a01b03811660e081905260408051636830483560e01b815290516368304835916004808201926020929091908290030181865afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d091906200032e565b6001600160a01b0316610100816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014f91906200032e565b6001600160a01b0316610120816001600160a01b031681525050610100516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d191906200032e565b6001600160a01b031661014052506097805460ff19166001179055620001f6620001ff565b50505062000355565b600054610100900460ff16156200026c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620002bf576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114620002d757600080fd5b50565b600080600060608486031215620002f057600080fd5b8351620002fd81620002c1565b60208501519093506200031081620002c1565b60408501519092506200032381620002c1565b809150509250925092565b6000602082840312156200034157600080fd5b81516200034e81620002c1565b9392505050565b60805160a05160c05160e05161010051610120516101405161407a6200044a600039600081816103ac015261154c015260008181610253015261172e015260008181610292015281816119040152611ac60152600081816102df01528181610c3201528181611221015281816113b901526115e90152600081816102b601528181611dd901528181611ead0152611f2c01526000818161097b01528181610acc01528181610b630152818161214b015281816122c401526123630152600081816107a601528181610835015281816108b501528181611d8501528181611e5101528181612086015261221f015261407a6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636efb4636116100de578063a98fb35511610097578063df5cf72311610071578063df5cf723146103a7578063e481af9d146103ce578063f2fde38b146103d6578063fabc1cbc146103e957600080fd5b8063a98fb35514610374578063b98d090814610387578063c350a1b51461039457600080fd5b80636efb463614610301578063715018a614610322578063886f11951461032a5780638da5cb5b1461033d5780639926ee7d1461034e578063a364f4da1461036157600080fd5b80635ac86ab7116101305780635ac86ab71461020a5780635c975abb1461023d5780635df459461461024e578063683048351461028d5780636b3aa72e146102b45780636d14a987146102da57600080fd5b806310d67a2f14610178578063136439dd1461018d578063171f1d5b146101a057806333cfb7b7146101cf578063416c7e5e146101ef578063595c6a6714610202575b600080fd5b61018b6101863660046133ba565b6103fc565b005b61018b61019b3660046133d7565b6104b8565b6101b36101ae366004613563565b6105f7565b6040805192151583529015156020830152015b60405180910390f35b6101e26101dd3660046133ba565b610781565b6040516101c691906135b4565b61018b6101fd36600461360f565b610c30565b61018b610da5565b61022d61021836600461363b565b60ca54600160ff9092169190911b9081161490565b60405190151581526020016101c6565b60ca546040519081526020016101c6565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c6565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b7f0000000000000000000000000000000000000000000000000000000000000000610275565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b61031461030f366004613916565b610e6c565b6040516101c6929190613a0a565b61018b611d66565b60c954610275906001600160a01b031681565b6033546001600160a01b0316610275565b61018b61035c366004613aaa565b611d7a565b61018b61036f3660046133ba565b611e46565b61018b610382366004613b54565b611f0d565b60975461022d9060ff1681565b61018b6103a2366004613ba4565b611f61565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b6101e2612080565b61018b6103e43660046133ba565b61242c565b61018b6103f73660046133d7565b6124a2565b60c960009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190613be6565b6001600160a01b0316336001600160a01b0316146104ac5760405162461bcd60e51b81526004016104a390613c03565b60405180910390fd5b6104b5816125fe565b50565b60c95460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190613c4d565b6105405760405162461bcd60e51b81526004016104a390613c6a565b60ca54818116146105b95760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016104a3565b60ca81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018787600001518860200151886000015160006002811061063f5761063f613cb2565b60200201518951600160200201518a6020015160006002811061066457610664613cb2565b60200201518b6020015160016002811061068057610680613cb2565b602090810291909101518c518d8301516040516106dd9a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6107009190613cc8565b905061077361071961071288846126f5565b8690612786565b61072161281b565b61076961075a85610754604080518082018252600080825260209182015281518083019092526001825260029082015290565b906126f5565b6107638c6128db565b90612786565b886201d4c061296a565b909890975095505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190613cea565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190613d03565b90506001600160c01b038116158061093a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190613d2c565b60ff16155b1561095657505060408051600081526020810190915292915050565b600061096a826001600160c01b0316612b84565b90506000805b8251811015610a36577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f58483815181106109ba576109ba613cb2565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190613cea565b610a2c9083613d5f565b9150600101610970565b506000816001600160401b03811115610a5157610a516133f0565b604051908082528060200260200182016040528015610a7a578160200160208202803683370190505b5090506000805b8451811015610c23576000858281518110610a9e57610a9e613cb2565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190613cea565b905060005b81811015610c18576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190613d89565b60000151868681518110610beb57610beb613cb2565b6001600160a01b039092166020928302919091019091015284610c0d81613dc8565b955050600101610b3c565b505050600101610a81565b5090979650505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190613be6565b6001600160a01b0316336001600160a01b031614610d5e5760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4016104a3565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b60c95460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610ded573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e119190613c4d565b610e2d5760405162461bcd60e51b81526004016104a390613c6a565b60001960ca81905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60408051808201909152606080825260208201526000848103610ee55760405162461bcd60e51b8152602060048201526037602482015260008051602061402583398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016104a3565b60408301515185148015610efd575060a08301515185145b8015610f0d575060c08301515185145b8015610f1d575060e08301515185145b610f875760405162461bcd60e51b8152602060048201526041602482015260008051602061402583398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016104a3565b82515160208401515114610fff5760405162461bcd60e51b815260206004820152604460248201819052600080516020614025833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016104a3565b4363ffffffff168463ffffffff161061106e5760405162461bcd60e51b815260206004820152603c602482015260008051602061402583398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016104a3565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b038111156110af576110af6133f0565b6040519080825280602002602001820160405280156110d8578160200160208202803683370190505b506020820152866001600160401b038111156110f6576110f66133f0565b60405190808252806020026020018201604052801561111f578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611153576111536133f0565b60405190808252806020026020018201604052801561117c578160200160208202803683370190505b5081526020860151516001600160401b0381111561119c5761119c6133f0565b6040519080825280602002602001820160405280156111c5578160200160208202803683370190505b50816020018190525060006112978a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa15801561126e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112929190613d2c565b612c46565b905060005b876020015151811015611528576112e1886020015182815181106112c2576112c2613cb2565b6020026020010151805160009081526020918201519091526040902090565b836020015182815181106112f7576112f7613cb2565b602090810291909101015280156113b7576020830151611318600183613de1565b8151811061132857611328613cb2565b602002602001015160001c8360200151828151811061134957611349613cb2565b602002602001015160001c116113b7576040805162461bcd60e51b815260206004820152602481019190915260008051602061402583398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016104a3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec6351846020015183815181106113fc576113fc613cb2565b60200260200101518b8b60000151858151811061141b5761141b613cb2565b60200260200101516040518463ffffffff1660e01b81526004016114589392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190613d03565b6001600160c01b0316836000015182815181106114b8576114b8613cb2565b60200260200101818152505061151e6107126114f284866000015185815181106114e4576114e4613cb2565b602002602001015116612cd9565b8a60200151848151811061150857611508613cb2565b6020026020010151612d0490919063ffffffff16565b945060010161129c565b505061153383612de7565b60975490935060ff1660008161154a5760006115cc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc9190613cea565b905060005b8a811015611c3557821561172c578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f8681811061162857611628613cb2565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c9190613cea565b6116969190613d5f565b1161172c5760405162461bcd60e51b8152602060048201526066602482015260008051602061402583398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016104a3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061176d5761176d613cb2565b9050013560f81c60f81b60f81c8c8c60a00151858151811061179157611791613cb2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156117ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118119190613df4565b6001600160401b0319166118348a6040015183815181106112c2576112c2613cb2565b67ffffffffffffffff1916146118d05760405162461bcd60e51b8152602060048201526061602482015260008051602061402583398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016104a3565b611900896040015182815181106118e9576118e9613cb2565b60200260200101518761278690919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d8481811061194357611943613cb2565b9050013560f81c60f81b60f81c8c8c60c00151858151811061196757611967613cb2565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156119c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e79190613e1f565b856020015182815181106119fd576119fd613cb2565b6001600160601b03909216602092830291909101820152850151805182908110611a2957611a29613cb2565b602002602001015185600001518281518110611a4757611a47613cb2565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a6020015151811015611c2b57611abf86600001518281518110611a9157611a91613cb2565b60200260200101518f8f86818110611aab57611aab613cb2565b600192013560f81c9290921c811614919050565b15611c23577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f86818110611b0557611b05613cb2565b9050013560f81c60f81b60f81c8e89602001518581518110611b2957611b29613cb2565b60200260200101518f60e001518881518110611b4757611b47613cb2565b60200260200101518781518110611b6057611b60613cb2565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015611bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be89190613e1f565b8751805185908110611bfc57611bfc613cb2565b60200260200101818151611c109190613e41565b6001600160601b03169052506001909101905b600101611a6b565b50506001016115d1565b505050600080611c4f8c868a606001518b608001516105f7565b9150915081611cc05760405162461bcd60e51b8152602060048201526043602482015260008051602061402583398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016104a3565b80611d215760405162461bcd60e51b8152602060048201526039602482015260008051602061402583398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016104a3565b50506000878260200151604051602001611d3c929190613e68565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b611d6e612e82565b611d786000612edc565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dc25760405162461bcd60e51b81526004016104a390613eb0565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d90611e109085908590600401613f6e565b600060405180830381600087803b158015611e2a57600080fd5b505af1158015611e3e573d6000803e3d6000fd5b505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611e8e5760405162461bcd60e51b81526004016104a390613eb0565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da906024015b600060405180830381600087803b158015611ef257600080fd5b505af1158015611f06573d6000803e3d6000fd5b5050505050565b611f15612e82565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590611ed8908490600401613fb9565b600054610100900460ff1615808015611f815750600054600160ff909116105b80611f9b5750303b158015611f9b575060005460ff166001145b611ffe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104a3565b6000805460ff191660011790558015612021576000805461ff0019166101001790555b61202b8484612f2e565b61203482612edc565b801561207a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121069190613d2c565b60ff1690508060000361212757505060408051600081526020810190915290565b6000805b828110156121d257604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa15801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be9190613cea565b6121c89083613d5f565b915060010161212b565b506000816001600160401b038111156121ed576121ed6133f0565b604051908082528060200260200182016040528015612216578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561227b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229f9190613d2c565b60ff1681101561242257604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015612313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123379190613cea565b905060005b81811015612418576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa1580156123b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d59190613d89565b600001518585815181106123eb576123eb613cb2565b6001600160a01b03909216602092830291909101909101528361240d81613dc8565b94505060010161233c565b505060010161221d565b5090949350505050565b612434612e82565b6001600160a01b0381166124995760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a3565b6104b581612edc565b60c960009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125199190613be6565b6001600160a01b0316336001600160a01b0316146125495760405162461bcd60e51b81526004016104a390613c03565b60ca5419811960ca541916146125c75760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016104a3565b60ca81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016105ec565b6001600160a01b03811661268c5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016104a3565b60c954604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a160c980546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152600080825260208201526127116132cb565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050808061274057fe5b508061277e5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016104a3565b505092915050565b60408051808201909152600080825260208201526127a26132e9565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa905080806127dd57fe5b508061277e5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016104a3565b612823613307565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b60408051808201909152600080825260208201526000808061290b60008051602061400583398151915286613cc8565b90505b61291781613018565b90935091506000805160206140058339815191528283098303612950576040805180820190915290815260208101919091529392505050565b60008051602061400583398151915260018208905061290e565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061299c61332c565b60005b6002811015612b575760006129b5826006613fcc565b90508482600281106129c9576129c9613cb2565b602002015151836129db836000613d5f565b600c81106129eb576129eb613cb2565b6020020152848260028110612a0257612a02613cb2565b60200201516020015183826001612a199190613d5f565b600c8110612a2957612a29613cb2565b6020020152838260028110612a4057612a40613cb2565b6020020151515183612a53836002613d5f565b600c8110612a6357612a63613cb2565b6020020152838260028110612a7a57612a7a613cb2565b6020020151516001602002015183612a93836003613d5f565b600c8110612aa357612aa3613cb2565b6020020152838260028110612aba57612aba613cb2565b602002015160200151600060028110612ad557612ad5613cb2565b602002015183612ae6836004613d5f565b600c8110612af657612af6613cb2565b6020020152838260028110612b0d57612b0d613cb2565b602002015160200151600160028110612b2857612b28613cb2565b602002015183612b39836005613d5f565b600c8110612b4957612b49613cb2565b60200201525060010161299f565b50612b6061334b565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b6060600080612b9284612cd9565b61ffff166001600160401b03811115612bad57612bad6133f0565b6040519080825280601f01601f191660200182016040528015612bd7576020820181803683370190505b5090506000805b825182108015612bef575061010081105b15612422576001811b935085841615612c36578060f81b838381518110612c1857612c18613cb2565b60200101906001600160f81b031916908160001a9053508160010191505b612c3f81613dc8565b9050612bde565b600080612c528461309a565b9050808360ff166001901b11612cd05760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016104a3565b90505b92915050565b6000805b8215612cd357612cee600184613de1565b9092169180612cfc81613fe3565b915050612cdd565b60408051808201909152600080825260208201526102008261ffff1610612d605760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016104a3565b8161ffff16600103612d73575081612cd3565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff1610612ddc57600161ffff871660ff83161c81169003612dbf57612dbc8484612786565b93505b612dc98384612786565b92506201fffe600192831b169101612d8f565b509195945050505050565b60408051808201909152600080825260208201528151158015612e0c57506020820151155b15612e2a575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206140058339815191528460200151612e5d9190613cc8565b612e7590600080516020614005833981519152613de1565b905292915050565b919050565b6033546001600160a01b03163314611d785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60c9546001600160a01b0316158015612f4f57506001600160a01b03821615155b612fd15760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016104a3565b60ca81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613014826125fe565b5050565b6000808060008051602061400583398151915260036000805160206140058339815191528660008051602061400583398151915288890909089050600061308e827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52600080516020614005833981519152613222565b91959194509092505050565b6000610100825111156131235760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016104a3565b815160000361313457506000919050565b6000808360008151811061314a5761314a613cb2565b0160200151600160f89190911c81901b92505b84518110156132195784818151811061317857613178613cb2565b0160200151600160f89190911c1b915082821161320d5760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016104a3565b9181179160010161315d565b50909392505050565b60008061322d61334b565b613235613369565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061327257fe5b50826132c05760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016104a3565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528061331a613387565b8152602001613327613387565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146104b557600080fd5b6000602082840312156133cc57600080fd5b8135612cd0816133a5565b6000602082840312156133e957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613428576134286133f0565b60405290565b60405161010081016001600160401b0381118282101715613428576134286133f0565b604051606081016001600160401b0381118282101715613428576134286133f0565b604051601f8201601f191681016001600160401b038111828210171561349b5761349b6133f0565b604052919050565b6000604082840312156134b557600080fd5b6134bd613406565b9050813581526020820135602082015292915050565b600082601f8301126134e457600080fd5b6134ec613406565b8060408401858111156134fe57600080fd5b845b81811015613518578035845260209384019301613500565b509095945050505050565b60006080828403121561353557600080fd5b61353d613406565b905061354983836134d3565b815261355883604084016134d3565b602082015292915050565b600080600080610120858703121561357a57600080fd5b8435935061358b86602087016134a3565b925061359a8660608701613523565b91506135a98660e087016134a3565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156135f55783516001600160a01b0316835292840192918401916001016135d0565b50909695505050505050565b80151581146104b557600080fd5b60006020828403121561362157600080fd5b8135612cd081613601565b60ff811681146104b557600080fd5b60006020828403121561364d57600080fd5b8135612cd08161362c565b803563ffffffff81168114612e7d57600080fd5b60006001600160401b03821115613685576136856133f0565b5060051b60200190565b600082601f8301126136a057600080fd5b813560206136b56136b08361366c565b613473565b8083825260208201915060208460051b8701019350868411156136d757600080fd5b602086015b848110156136fa576136ed81613658565b83529183019183016136dc565b509695505050505050565b600082601f83011261371657600080fd5b813560206137266136b08361366c565b8083825260208201915060208460061b87010193508684111561374857600080fd5b602086015b848110156136fa5761375f88826134a3565b83529183019160400161374d565b600082601f83011261377e57600080fd5b8135602061378e6136b08361366c565b82815260059290921b840181019181810190868411156137ad57600080fd5b8286015b848110156136fa5780356001600160401b038111156137d05760008081fd5b6137de8986838b010161368f565b8452509183019183016137b1565b600061018082840312156137ff57600080fd5b61380761342e565b905081356001600160401b038082111561382057600080fd5b61382c8583860161368f565b8352602084013591508082111561384257600080fd5b61384e85838601613705565b6020840152604084013591508082111561386757600080fd5b61387385838601613705565b60408401526138858560608601613523565b60608401526138978560e086016134a3565b60808401526101208401359150808211156138b157600080fd5b6138bd8583860161368f565b60a08401526101408401359150808211156138d757600080fd5b6138e38583860161368f565b60c08401526101608401359150808211156138fd57600080fd5b5061390a8482850161376d565b60e08301525092915050565b60008060008060006080868803121561392e57600080fd5b8535945060208601356001600160401b038082111561394c57600080fd5b818801915088601f83011261396057600080fd5b81358181111561396f57600080fd5b89602082850101111561398157600080fd5b602083019650945061399560408901613658565b935060608801359150808211156139ab57600080fd5b506139b8888289016137ec565b9150509295509295909350565b60008151808452602080850194506020840160005b838110156139ff5781516001600160601b0316875295820195908201906001016139da565b509495945050505050565b6040815260008351604080840152613a2560808401826139c5565b90506020850151603f19848303016060850152613a4282826139c5565b925050508260208301529392505050565b60006001600160401b03831115613a6c57613a6c6133f0565b613a7f601f8401601f1916602001613473565b9050828152838383011115613a9357600080fd5b828260208301376000602084830101529392505050565b60008060408385031215613abd57600080fd5b8235613ac8816133a5565b915060208301356001600160401b0380821115613ae457600080fd5b9084019060608287031215613af857600080fd5b613b00613451565b823582811115613b0f57600080fd5b83019150601f82018713613b2257600080fd5b613b3187833560208501613a53565b815260208301356020820152604083013560408201528093505050509250929050565b600060208284031215613b6657600080fd5b81356001600160401b03811115613b7c57600080fd5b8201601f81018413613b8d57600080fd5b613b9c84823560208401613a53565b949350505050565b600080600060608486031215613bb957600080fd5b8335613bc4816133a5565b9250602084013591506040840135613bdb816133a5565b809150509250925092565b600060208284031215613bf857600080fd5b8151612cd0816133a5565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b600060208284031215613c5f57600080fd5b8151612cd081613601565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082613ce557634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215613cfc57600080fd5b5051919050565b600060208284031215613d1557600080fd5b81516001600160c01b0381168114612cd057600080fd5b600060208284031215613d3e57600080fd5b8151612cd08161362c565b634e487b7160e01b600052601160045260246000fd5b80820180821115612cd357612cd3613d49565b80516001600160601b0381168114612e7d57600080fd5b600060408284031215613d9b57600080fd5b613da3613406565b8251613dae816133a5565b8152613dbc60208401613d72565b60208201529392505050565b600060018201613dda57613dda613d49565b5060010190565b81810381811115612cd357612cd3613d49565b600060208284031215613e0657600080fd5b815167ffffffffffffffff1981168114612cd057600080fd5b600060208284031215613e3157600080fd5b613e3a82613d72565b9392505050565b6001600160601b03828116828216039080821115613e6157613e61613d49565b5092915050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015613ea357815185529382019390820190600101613e87565b5092979650505050505050565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b6000815180845260005b81811015613f4e57602081850181015186830182015201613f32565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b0383168152604060208201526000825160606040840152613f9860a0840182613f28565b90506020840151606084015260408401516080840152809150509392505050565b602081526000613e3a6020830184613f28565b8082028115828204841417612cd357612cd3613d49565b600061ffff808316818103613ffa57613ffa613d49565b600101939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a26469706673582212209ba0029b4f55d25110a6b27e03c7a6385082aa3f8f06c921f4ccfe4a6b52fc6664736f6c63430008170033",
}

// ContractOpacityServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractOpacityServiceManagerMetaData.ABI instead.
var ContractOpacityServiceManagerABI = ContractOpacityServiceManagerMetaData.ABI

// ContractOpacityServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractOpacityServiceManagerMetaData.Bin instead.
var ContractOpacityServiceManagerBin = ContractOpacityServiceManagerMetaData.Bin

// DeployContractOpacityServiceManager deploys a new Ethereum contract, binding an instance of ContractOpacityServiceManager to it.
func DeployContractOpacityServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, __avsDirectory common.Address, __registryCoordinator common.Address, __stakeRegistry common.Address) (common.Address, *types.Transaction, *ContractOpacityServiceManager, error) {
	parsed, err := ContractOpacityServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractOpacityServiceManagerBin), backend, __avsDirectory, __registryCoordinator, __stakeRegistry)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractOpacityServiceManager{ContractOpacityServiceManagerCaller: ContractOpacityServiceManagerCaller{contract: contract}, ContractOpacityServiceManagerTransactor: ContractOpacityServiceManagerTransactor{contract: contract}, ContractOpacityServiceManagerFilterer: ContractOpacityServiceManagerFilterer{contract: contract}}, nil
}

// ContractOpacityServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractOpacityServiceManager struct {
	ContractOpacityServiceManagerCaller     // Read-only binding to the contract
	ContractOpacityServiceManagerTransactor // Write-only binding to the contract
	ContractOpacityServiceManagerFilterer   // Log filterer for contract events
}

// ContractOpacityServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractOpacityServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractOpacityServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractOpacityServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractOpacityServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractOpacityServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractOpacityServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractOpacityServiceManagerSession struct {
	Contract     *ContractOpacityServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                  // Call options to use throughout this session
	TransactOpts bind.TransactOpts              // Transaction auth options to use throughout this session
}

// ContractOpacityServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractOpacityServiceManagerCallerSession struct {
	Contract *ContractOpacityServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                        // Call options to use throughout this session
}

// ContractOpacityServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractOpacityServiceManagerTransactorSession struct {
	Contract     *ContractOpacityServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                        // Transaction auth options to use throughout this session
}

// ContractOpacityServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractOpacityServiceManagerRaw struct {
	Contract *ContractOpacityServiceManager // Generic contract binding to access the raw methods on
}

// ContractOpacityServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractOpacityServiceManagerCallerRaw struct {
	Contract *ContractOpacityServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractOpacityServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractOpacityServiceManagerTransactorRaw struct {
	Contract *ContractOpacityServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractOpacityServiceManager creates a new instance of ContractOpacityServiceManager, bound to a specific deployed contract.
func NewContractOpacityServiceManager(address common.Address, backend bind.ContractBackend) (*ContractOpacityServiceManager, error) {
	contract, err := bindContractOpacityServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManager{ContractOpacityServiceManagerCaller: ContractOpacityServiceManagerCaller{contract: contract}, ContractOpacityServiceManagerTransactor: ContractOpacityServiceManagerTransactor{contract: contract}, ContractOpacityServiceManagerFilterer: ContractOpacityServiceManagerFilterer{contract: contract}}, nil
}

// NewContractOpacityServiceManagerCaller creates a new read-only instance of ContractOpacityServiceManager, bound to a specific deployed contract.
func NewContractOpacityServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractOpacityServiceManagerCaller, error) {
	contract, err := bindContractOpacityServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerCaller{contract: contract}, nil
}

// NewContractOpacityServiceManagerTransactor creates a new write-only instance of ContractOpacityServiceManager, bound to a specific deployed contract.
func NewContractOpacityServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractOpacityServiceManagerTransactor, error) {
	contract, err := bindContractOpacityServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerTransactor{contract: contract}, nil
}

// NewContractOpacityServiceManagerFilterer creates a new log filterer instance of ContractOpacityServiceManager, bound to a specific deployed contract.
func NewContractOpacityServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractOpacityServiceManagerFilterer, error) {
	contract, err := bindContractOpacityServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerFilterer{contract: contract}, nil
}

// bindContractOpacityServiceManager binds a generic wrapper to an already deployed contract.
func bindContractOpacityServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractOpacityServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractOpacityServiceManager.Contract.ContractOpacityServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.ContractOpacityServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.ContractOpacityServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractOpacityServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.contract.Transact(opts, method, params...)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.AvsDirectory(&_ContractOpacityServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.AvsDirectory(&_ContractOpacityServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.BlsApkRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.BlsApkRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractOpacityServiceManager.Contract.CheckSignatures(&_ContractOpacityServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractOpacityServiceManager.Contract.CheckSignatures(&_ContractOpacityServiceManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Delegation() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.Delegation(&_ContractOpacityServiceManager.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) Delegation() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.Delegation(&_ContractOpacityServiceManager.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractOpacityServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractOpacityServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractOpacityServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractOpacityServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractOpacityServiceManager.Contract.GetRestakeableStrategies(&_ContractOpacityServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractOpacityServiceManager.Contract.GetRestakeableStrategies(&_ContractOpacityServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Owner() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.Owner(&_ContractOpacityServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.Owner(&_ContractOpacityServiceManager.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Paused(index uint8) (bool, error) {
	return _ContractOpacityServiceManager.Contract.Paused(&_ContractOpacityServiceManager.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) Paused(index uint8) (bool, error) {
	return _ContractOpacityServiceManager.Contract.Paused(&_ContractOpacityServiceManager.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Paused0() (*big.Int, error) {
	return _ContractOpacityServiceManager.Contract.Paused0(&_ContractOpacityServiceManager.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) Paused0() (*big.Int, error) {
	return _ContractOpacityServiceManager.Contract.Paused0(&_ContractOpacityServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) PauserRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.PauserRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.PauserRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.RegistryCoordinator(&_ContractOpacityServiceManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.RegistryCoordinator(&_ContractOpacityServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.StakeRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractOpacityServiceManager.Contract.StakeRegistry(&_ContractOpacityServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) StaleStakesForbidden() (bool, error) {
	return _ContractOpacityServiceManager.Contract.StaleStakesForbidden(&_ContractOpacityServiceManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractOpacityServiceManager.Contract.StaleStakesForbidden(&_ContractOpacityServiceManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractOpacityServiceManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractOpacityServiceManager.Contract.TrySignatureAndApkVerification(&_ContractOpacityServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractOpacityServiceManager.Contract.TrySignatureAndApkVerification(&_ContractOpacityServiceManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractOpacityServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractOpacityServiceManager.TransactOpts, operator)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "initialize", _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Initialize(&_ContractOpacityServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc350a1b5.
//
// Solidity: function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) Initialize(_pauserRegistry common.Address, _initialPausedStatus *big.Int, _initialOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Initialize(&_ContractOpacityServiceManager.TransactOpts, _pauserRegistry, _initialPausedStatus, _initialOwner)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Pause(&_ContractOpacityServiceManager.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Pause(&_ContractOpacityServiceManager.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) PauseAll() (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.PauseAll(&_ContractOpacityServiceManager.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.PauseAll(&_ContractOpacityServiceManager.TransactOpts)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.RegisterOperatorToAVS(&_ContractOpacityServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.RegisterOperatorToAVS(&_ContractOpacityServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.RenounceOwnership(&_ContractOpacityServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.RenounceOwnership(&_ContractOpacityServiceManager.TransactOpts)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.SetPauserRegistry(&_ContractOpacityServiceManager.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.SetPauserRegistry(&_ContractOpacityServiceManager.TransactOpts, newPauserRegistry)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.SetStaleStakesForbidden(&_ContractOpacityServiceManager.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.SetStaleStakesForbidden(&_ContractOpacityServiceManager.TransactOpts, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.TransferOwnership(&_ContractOpacityServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.TransferOwnership(&_ContractOpacityServiceManager.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Unpause(&_ContractOpacityServiceManager.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.Unpause(&_ContractOpacityServiceManager.TransactOpts, newPausedStatus)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.UpdateAVSMetadataURI(&_ContractOpacityServiceManager.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractOpacityServiceManager.Contract.UpdateAVSMetadataURI(&_ContractOpacityServiceManager.TransactOpts, _metadataURI)
}

// ContractOpacityServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerInitializedIterator struct {
	Event *ContractOpacityServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerInitialized represents a Initialized event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractOpacityServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerInitializedIterator{contract: _ContractOpacityServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerInitialized)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractOpacityServiceManagerInitialized, error) {
	event := new(ContractOpacityServiceManagerInitialized)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOpacityServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerOwnershipTransferredIterator struct {
	Event *ContractOpacityServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractOpacityServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerOwnershipTransferredIterator{contract: _ContractOpacityServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerOwnershipTransferred)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractOpacityServiceManagerOwnershipTransferred, error) {
	event := new(ContractOpacityServiceManagerOwnershipTransferred)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOpacityServiceManagerPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerPausedIterator struct {
	Event *ContractOpacityServiceManagerPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerPaused represents a Paused event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractOpacityServiceManagerPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerPausedIterator{contract: _ContractOpacityServiceManager.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerPaused)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParsePaused(log types.Log) (*ContractOpacityServiceManagerPaused, error) {
	event := new(ContractOpacityServiceManagerPaused)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOpacityServiceManagerPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerPauserRegistrySetIterator struct {
	Event *ContractOpacityServiceManagerPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerPauserRegistrySet represents a PauserRegistrySet event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractOpacityServiceManagerPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerPauserRegistrySetIterator{contract: _ContractOpacityServiceManager.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerPauserRegistrySet)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParsePauserRegistrySet(log types.Log) (*ContractOpacityServiceManagerPauserRegistrySet, error) {
	event := new(ContractOpacityServiceManagerPauserRegistrySet)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator struct {
	Event *ContractOpacityServiceManagerStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerStaleStakesForbiddenUpdateIterator{contract: _ContractOpacityServiceManager.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerStaleStakesForbiddenUpdate)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractOpacityServiceManagerStaleStakesForbiddenUpdate, error) {
	event := new(ContractOpacityServiceManagerStaleStakesForbiddenUpdate)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOpacityServiceManagerUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerUnpausedIterator struct {
	Event *ContractOpacityServiceManagerUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOpacityServiceManagerUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOpacityServiceManagerUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOpacityServiceManagerUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOpacityServiceManagerUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOpacityServiceManagerUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOpacityServiceManagerUnpaused represents a Unpaused event raised by the ContractOpacityServiceManager contract.
type ContractOpacityServiceManagerUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractOpacityServiceManagerUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractOpacityServiceManagerUnpausedIterator{contract: _ContractOpacityServiceManager.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractOpacityServiceManagerUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractOpacityServiceManager.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOpacityServiceManagerUnpaused)
				if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractOpacityServiceManager *ContractOpacityServiceManagerFilterer) ParseUnpaused(log types.Log) (*ContractOpacityServiceManagerUnpaused, error) {
	event := new(ContractOpacityServiceManagerUnpaused)
	if err := _ContractOpacityServiceManager.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
